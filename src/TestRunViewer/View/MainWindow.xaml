<mah:MetroWindow 
    x:Class="TestRunViewer.View.MainWindow"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    GlowBrush="{DynamicResource AccentColorBrush}"
    BorderThickness="1"

   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
   xmlns:viewModel="clr-namespace:TestRunViewer.ViewModel"
   xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
   d:DataContext="{d:DesignInstance Type=viewModel:MainViewModel}"
   mc:Ignorable="d"
   Title="TestMonitor" Height="600" Width="800">

  <!-- <Window.DataContext> -->
  <!--   <viewModel:MainViewModel /> -->
  <!-- </Window.DataContext> -->

  <Window.Resources>
        <SolidColorBrush x:Key="NotRunStateBrush" Color="Gray" />
        <!-- <SolidColorBrush x:Key="CancelledStateBrush" Color="Orange" /> -->
        <SolidColorBrush x:Key="FailedStateBrush" Color="Red" />
        <SolidColorBrush x:Key="ExecutingStateBrush" Color="Aquamarine" />
        <SolidColorBrush x:Key="SkippedStateBrush" Color="DarkOrange" />
        <SolidColorBrush x:Key="SucceededStateBrush" Color="Green" />
    <SolidColorBrush x:Key="ErrorStateBrush" Color="Red" />
    <!-- <SolidColorBrush x:Key="ExecutingGetItemsThroughCallbackStateBrush" Color="MediumSlateBlue" /> -->
    <!-- <SolidColorBrush x:Key="ExecutingAddItemStateBrush" Color="DeepSkyBlue" /> -->
    <!-- <SolidColorBrush x:Key="ExecutingAddItemDuplexStateBrush" Color="Violet" /> -->

    <DataTemplate DataType="{x:Type viewModel:SingleTestViewModel}">
      <Border x:Name="ClientBox" Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="DimGray" ToolTip="{Binding Path=Name}">
        <!-- <Border.InputBindings> -->
        <!--   <MouseBinding Gesture="Control+LeftClick" Command="{Binding Path=GetItemsCommand}" /> -->
        <!--   <MouseBinding Gesture="Shift+LeftClick" Command="{Binding Path=GetItemsThroughCallbackCommand}" /> -->
        <!--   <MouseBinding Gesture="LeftClick" Command="{Binding Path=AddItemCommand}" /> -->
        <!-- </Border.InputBindings> -->
        <!-- <TextBlock Text="{Binding Path=ItemCount}" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="8" /> -->
      </Border>

    <DataTemplate.Triggers>
        <DataTrigger Binding="{Binding Path=State}" Value="{x:Static viewModel:State.NotRun}">
            <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource NotRunStateBrush}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding Path=State}" Value="{x:Static viewModel:State.Skipped}">
            <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource SkippedStateBrush}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding Path=State}" Value="{x:Static viewModel:State.Executing}">
            <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource ExecutingStateBrush}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding Path=State}" Value="{x:Static viewModel:State.Failed}">
            <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource FailedStateBrush}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding Path=State}" Value="{x:Static viewModel:State.Succeeded}">
            <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource SucceededStateBrush}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding Path=State}" Value="{x:Static viewModel:State.Error}">
          <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource ErrorStateBrush}" />
        </DataTrigger>

      </DataTemplate.Triggers>
    </DataTemplate>
  </Window.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="2*" />
      <!-- <RowDefinition Height="Auto" /> -->
      <!-- <RowDefinition Height="*" /> -->
    </Grid.RowDefinitions>

    <StackPanel Grid.Row="0" Orientation="Vertical">
      <!-- <WrapPanel Orientation="Horizontal"> -->
      <!--   <TextBox Text="{Binding Path=Port}"  MinWidth="100" Margin="4" /> -->
      <!--   <Button Content="Start" Command="{Binding Path=StartListening}" Width="80" Margin="4" /> -->
      <!--   <Button Content="Reset" Command="{Binding Path=ResetClientsCommand}" Width="80" Margin="4" /> -->
      <!-- </WrapPanel> -->

      <!-- <WrapPanel Orientation="Horizontal"> -->
      <!--   <Button Content="GetItems" Command="{Binding Path=GetItemsCommand}" Width="80" Margin="4" /> -->
      <!--   <Label Content="Individual: Control+LeftClick" /> -->
      <!-- </WrapPanel> -->

      <WrapPanel Orientation="Horizontal" Margin="10,10,10,0">
          <StackPanel Orientation="Horizontal">
              <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource NotRunStateBrush}" />
              <Label Content="Found" />
          </StackPanel>
        <StackPanel Orientation="Horizontal">
          <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource SkippedStateBrush}" />
          <Label Content="Skipped" />
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ExecutingStateBrush}" />
          <Label Content="Running" />
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource SucceededStateBrush}" />
          <Label Content="Succeeded" />
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource FailedStateBrush}" />
          <Label Content="Failed" />
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ErrorStateBrush}" />
          <Label Content="Error" />
        </StackPanel>
      </WrapPanel>

      <!-- <WrapPanel Orientation="Horizontal" Margin="10,0,10,10"> -->
      <!--   <StackPanel Orientation="Horizontal"> -->
      <!--     <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource StartedExecutionStateBrush}" /> -->
      <!--     <Label Content="Started execution" /> -->
      <!--   </StackPanel> -->
      <!--   <StackPanel Orientation="Horizontal"> -->
      <!--     <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ExecutingGetItemsStateBrush}" /> -->
      <!--     <Label Content="Getting items" /> -->
      <!--   </StackPanel> -->
      <!--   <StackPanel Orientation="Horizontal"> -->
      <!--     <Border Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="{StaticResource ExecutingGetItemsDuplexStateBrush}" /> -->
      <!--     <Label Content="Getting items (duplex)" /> -->
      <!--   </StackPanel> -->
      <!-- </WrapPanel> -->
    </StackPanel>

    <ScrollViewer Grid.Row="2" Margin="10" HorizontalScrollBarVisibility="Disabled">
      <ItemsControl ItemsSource="{Binding Path=Tests}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel/>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
      </ItemsControl>
    </ScrollViewer>

    <!-- <StackPanel Grid.Row="3" Orientation="Horizontal"> -->
    <!--   <Button Content="Clear messages" Command="{Binding Path=ClearLogCommand}" Width="100" Margin="4" /> -->
    <!-- </StackPanel> -->
    <!-- -->
    <!-- <Border Grid.Row="4" Margin="10" BorderBrush="Black" BorderThickness="1"> -->
    <!--   <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"> -->
    <!--     <ItemsControl ItemsSource="{Binding Path=Messages}" HorizontalAlignment="Stretch" /> -->
    <!--   </ScrollViewer> -->
    <!-- </Border> -->
  </Grid>
</mah:MetroWindow>
