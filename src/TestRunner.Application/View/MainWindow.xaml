<mah:MetroWindow 
    x:Class="TestRunner.Application.View.MainWindow"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    GlowBrush="{DynamicResource AccentColorBrush}"
    BorderThickness="1"

   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:viewModel="clr-namespace:TestRunner.Application.ViewModel"
    xmlns:view="clr-namespace:TestRunner.Application.View"
    d:DataContext="{d:DesignInstance Type=viewModel:MainViewModel}"
   mc:Ignorable="d"
   Title="TestMonitor" Height="600" Width="800">

  <!-- <Window.DataContext> -->
  <!--   <viewModel:MainViewModel /> -->
  <!-- </Window.DataContext> -->

  <Window.Resources>
        <SolidColorBrush x:Key="NotRunStateBrush" Color="Gray" />
        <!-- <SolidColorBrush x:Key="CancelledStateBrush" Color="Orange" /> -->
        <SolidColorBrush x:Key="FailedStateBrush" Color="Red" />
        <SolidColorBrush x:Key="ExecutingStateBrush" Color="Aquamarine" />
        <SolidColorBrush x:Key="SkippedStateBrush" Color="DarkOrange" />
        <SolidColorBrush x:Key="SucceededStateBrush" Color="Green" />
    <SolidColorBrush x:Key="ErrorStateBrush" Color="Red" />
    <!-- <SolidColorBrush x:Key="ExecutingGetItemsThroughCallbackStateBrush" Color="MediumSlateBlue" /> -->
    <!-- <SolidColorBrush x:Key="ExecutingAddItemStateBrush" Color="DeepSkyBlue" /> -->
    <!-- <SolidColorBrush x:Key="ExecutingAddItemDuplexStateBrush" Color="Violet" /> -->

        <DataTemplate DataType="{x:Type viewModel:TestsViewModel}">
            <Border x:Name="ClientBox" Height="20" Width="20" BorderBrush="Black" BorderThickness="1" Background="DimGray" ToolTip="{Binding Path=Name}">
                <!-- <Border.InputBindings> -->
                <!--   <MouseBinding Gesture="Control+LeftClick" Command="{Binding Path=GetItemsCommand}" /> -->
                <!--   <MouseBinding Gesture="Shift+LeftClick" Command="{Binding Path=GetItemsThroughCallbackCommand}" /> -->
                <!--   <MouseBinding Gesture="LeftClick" Command="{Binding Path=AddItemCommand}" /> -->
                <!-- </Border.InputBindings> -->
                <!-- <TextBlock Text="{Binding Path=ItemCount}" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="8" /> -->
            </Border>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=TestState}" Value="{x:Static viewModel:TestState.NotRun}">
                    <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource NotRunStateBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=TestState}" Value="{x:Static viewModel:TestState.Skipped}">
                    <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource SkippedStateBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=TestState}" Value="{x:Static viewModel:TestState.Executing}">
                    <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource ExecutingStateBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=TestState}" Value="{x:Static viewModel:TestState.Failed}">
                    <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource FailedStateBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=TestState}" Value="{x:Static viewModel:TestState.Succeeded}">
                    <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource SucceededStateBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=TestState}" Value="{x:Static viewModel:TestState.Error}">
                    <Setter TargetName="ClientBox" Property="Background" Value="{StaticResource ErrorStateBrush}" />
                </DataTrigger>

            </DataTemplate.Triggers>
        </DataTemplate>

    </Window.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="2*" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <StackPanel Grid.Row="0" Orientation="Vertical">
    
    </StackPanel>

    <ScrollViewer Grid.Row="2" Margin="10" HorizontalScrollBarVisibility="Disabled">
      <ItemsControl ItemsSource="{Binding Path=Tests}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel/>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
      </ItemsControl>
    </ScrollViewer>

      <GridSplitter Grid.Row="3" Grid.Column="0" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="True" ResizeBehavior="PreviousAndNext" ResizeDirection="Rows" />
      <view:OutputControl Grid.Row="4" Grid.Column="0" DataContext="{Binding Path=Logs, Mode=OneWay}" />

<!--     <StackPanel Grid.Row="3" Orientation="Horizontal"> -->
<!--       <Button Content="Clear messages" Command="{Binding Path=ClearLogCommand}" Width="100" Margin="4" /> -->
<!--     </StackPanel> -->
<!--      -->
<!--     <Border Grid.Row="4" Margin="10" BorderBrush="Black" BorderThickness="1"> -->
<!--       <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"> -->
<!--           <RichTextBox x:Name="Rtb" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></RichTextBox> -->
<!-- ~1~ <ItemsControl ItemsSource="{Binding Path=Messages}" HorizontalAlignment="Stretch" /> @1@ -->
<!--       </ScrollViewer> -->
<!--     </Border> -->
  </Grid>
</mah:MetroWindow>
